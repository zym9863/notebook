name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 只在推送标签时触发，例如 v1.0.0
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build APK with ABI split
        run: flutter build apk --release --split-per-abi

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: build/app/outputs/flutter-apk/*.apk
          retention-days: 5

  build-windows:
    name: Build Windows EXE
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
          cache: true

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build Windows app
        run: flutter build windows --release

      - name: Create Windows installer (optional)
        shell: powershell
        run: |
          # 创建一个简单的压缩包
          $sourceDir = "build\windows\x64\runner\Release"
          $outputDir = "build\windows"
          $appName = "notebook-windows-x64"
          
          # 压缩文件
          Compress-Archive -Path "$sourceDir\*" -DestinationPath "$outputDir\$appName.zip" -Force
          
          # 重命名exe文件以便识别
          Copy-Item "$sourceDir\notebook.exe" -Destination "$outputDir\notebook-windows-x64.exe"

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: |
            build/windows/notebook-windows-x64.exe
            build/windows/notebook-windows-x64.zip
          retention-days: 5

  release:
    name: Create Release
    needs: [build-android, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-apks
          path: ./artifacts/android/

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-exe
          path: ./artifacts/windows/

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: List artifacts
        run: |
          echo "Android APKs:"
          ls -la ./artifacts/android/
          echo "Windows files:"
          ls -la ./artifacts/windows/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Notebook ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## 📱 Notebook App ${{ steps.get_version.outputs.VERSION }}
            
            ### 🚀 新功能和改进
            - 自动构建和发布
            - 支持多平台部署
            
            ### 📦 下载文件说明
            
            **Android APK 文件：**
            - `app-arm64-v8a-release.apk` - 适用于 ARM64 设备（推荐，大多数现代 Android 设备）
            - `app-armeabi-v7a-release.apk` - 适用于 ARMv7 设备（较老的 Android 设备）
            - `app-x86_64-release.apk` - 适用于 x86_64 设备（模拟器或 x86 Android 设备）
            
            **Windows 文件：**
            - `notebook-windows-x64.exe` - Windows 可执行文件
            - `notebook-windows-x64.zip` - Windows 完整应用包（包含所有依赖文件）
            
            ### 📱 安装说明
            
            **Android：**
            1. 下载对应你设备架构的 APK 文件
            2. 在设备上启用"未知来源"安装
            3. 点击 APK 文件安装
            
            **Windows：**
            1. 下载 `notebook-windows-x64.zip` 并解压
            2. 运行解压后的 `notebook.exe`
            
            或者直接下载 `notebook-windows-x64.exe` 运行（可能需要安装 Visual C++ 运行库）
          draft: false
          prerelease: false

      - name: Upload Android APK (ARM64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/android/app-arm64-v8a-release.apk
          asset_name: notebook-android-arm64-v8a.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Android APK (ARMv7)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/android/app-armeabi-v7a-release.apk
          asset_name: notebook-android-armeabi-v7a.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Android APK (x86_64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/android/app-x86_64-release.apk
          asset_name: notebook-android-x86_64.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Windows EXE
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows/notebook-windows-x64.exe
          asset_name: notebook-windows-x64.exe
          asset_content_type: application/octet-stream

      - name: Upload Windows ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows/notebook-windows-x64.zip
          asset_name: notebook-windows-x64.zip
          asset_content_type: application/zip
